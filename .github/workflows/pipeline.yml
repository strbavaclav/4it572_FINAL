name: Install, Build & test E-shop

on:
  workflow_dispatch:
  push:

jobs:
  Install:
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 14

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}
          restore-keys: node_modules-

      - name: Install packages with npm
        run: |
          npm ci

  Build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 14

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}

      - name: Build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build folder
        if: ${{github.ref == 'refs/heads/main'}}
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{runner.os}}-build-${{github.run_id}}
          restore-keys: ${{runner.os}}-build-${{github.run_id}}

  Test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Code checkout
        uses: actions/checkout@v4.1.1
        with:
          token: ${{secrets.WORKFLOW_TOKEN}}

      - name: Setup NodeJS
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 14

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: node_modules
          key: node_modules-${{hashFiles('**/package-lock.json')}}

      - name: Run tests
        run: |
          npm run test -- --colors

  Deploy:
    needs: [Build, Test]
    if: ${{github.ref == 'refs/heads/main'}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: appleboy/ssh-action@v1.0.0
        with:
            host: ec2-54-85-180-185.compute-1.amazonaws.com
            username: ec2-user
            key: ${{secrets.AWS_KEY_PEM}}
            port: 22
            script: |
              python3 -V
              sudo yum install -y git
              sudo yum install -y pip
              pip3 install ansible boto boto3
              git clone https://github.com/strbavaclav/4it572_FINAL.git
              ls -la
              cd 4it572_FINAL
              cd ansible
              echo "${{secrets.AWS_KEY_PEM}}" > ansible.pem
              echo "${{ secrets.VAULT_PASSWORD }}" > vault_pass.txt

              echo "access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}" > group_vars/all/aws.yml
              echo "secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> group_vars/all/aws.yml
              echo "session_token: ${{ secrets.AWS_SESSION_TOKEN }}" >> group_vars/all/aws.yml
              ansible-vault encrypt group_vars/all/aws.yml --vault-password-file vault_pass.txt

              ansible-playbook playbook.yml --vault-password-file vault_pass.txt --user ec2-user --key-file ansible.pem
